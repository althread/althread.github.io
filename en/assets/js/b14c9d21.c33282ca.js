"use strict";(self.webpackChunkalthread=self.webpackChunkalthread||[]).push([[59],{2457:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var t=n(6070),s=n(5710);const a={sidebar_position:2},o="Arguments",i={id:"guide/program/arguments",title:"Arguments",description:"A program can receive arguments. These arguments are values passed to the program during its execution. Arguments are used to customize the processes running a program.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/guide/program/arguments.md",sourceDirName:"guide/program",slug:"/guide/program/arguments",permalink:"/en/docs/guide/program/arguments",draft:!1,unlisted:!1,editUrl:"https://github.com/althread/althread/tree/main/doc/docs/guide/program/arguments.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"guideSidebar",previous:{title:"Using Programs",permalink:"/en/docs/guide/program/simple-process"},next:{title:"Shared Variables",permalink:"/en/docs/guide/program/global"}},c={},d=[];function u(e){const r={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"arguments",children:"Arguments"})}),"\n",(0,t.jsxs)(r.p,{children:["A program can receive arguments. These arguments are values passed to the program during its execution. Arguments are used to customize the processes running a program.\nHere's an example of a program declaration using an argument ",(0,t.jsx)(r.code,{children:"id"}),":"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-althread",children:'program MyProgram(id: int) {\n    print("Program ", id);\n    if id == 0 {\n        print("I am the first process");\n    }\n}\nmain {\n    run MyProgram(0);\n    run MyProgram(1);\n    run MyProgram(2);\n}\n'})}),"\n",(0,t.jsxs)(r.p,{children:["In this example, the ",(0,t.jsx)(r.code,{children:"MyProgram"})," program takes an argument ",(0,t.jsx)(r.code,{children:"id"})," of type ",(0,t.jsx)(r.code,{children:"int"}),". When the program is executed, the ",(0,t.jsx)(r.code,{children:"id"})," argument is passed to each instance of the program. Each instance of the program, that is, each process, can then use the ",(0,t.jsx)(r.code,{children:"id"})," argument value to customize its behavior."]}),"\n",(0,t.jsx)(r.admonition,{type:"note",children:(0,t.jsxs)(r.p,{children:["Be careful, in the example above, once the processes running ",(0,t.jsx)(r.code,{children:"MyProgram"})," are started, the execution order is arbitrary. It is possible that the process with the ",(0,t.jsx)(r.code,{children:"id"})," argument equal to 0 will not be the first to execute!"]})})]})}function m(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},5710:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>i});var t=n(758);const s={},a=t.createContext(s);function o(e){const r=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:r},e.children)}}}]);