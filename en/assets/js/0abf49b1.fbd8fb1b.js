"use strict";(self.webpackChunkalthread=self.webpackChunkalthread||[]).push([[536],{9027:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"guideSidebar":[{"type":"link","label":"Introduction","href":"/en/docs/guide/intro","docId":"guide/intro","unlisted":false},{"type":"category","label":"Getting Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/en/docs/guide/getting-started/installation","docId":"guide/getting-started/installation","unlisted":false},{"type":"link","label":"Althread Syntax","href":"/en/docs/guide/getting-started/syntaxe","docId":"guide/getting-started/syntaxe","unlisted":false},{"type":"link","label":"hello-world","href":"/en/docs/guide/getting-started/hello-world","docId":"guide/getting-started/hello-world","unlisted":false}]},{"type":"category","label":"Programs","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Using Programs","href":"/en/docs/guide/program/simple-process","docId":"guide/program/simple-process","unlisted":false},{"type":"link","label":"Arguments","href":"/en/docs/guide/program/arguments","docId":"guide/program/arguments","unlisted":false},{"type":"link","label":"Shared Variables","href":"/en/docs/guide/program/global","docId":"guide/program/global","unlisted":false}]},{"type":"category","label":"Communication Channels","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Creating a Channel","href":"/en/docs/guide/channels/create","docId":"guide/channels/create","unlisted":false},{"type":"link","label":"Multiple Message Waiting","href":"/en/docs/guide/channels/multiple-wait","docId":"guide/channels/multiple-wait","unlisted":false}]},{"type":"link","label":"Creating Tests","href":"/en/docs/guide/test","docId":"guide/test","unlisted":false},{"type":"link","label":"Debugging","href":"/en/docs/guide/debugging","docId":"guide/debugging","unlisted":false},{"type":"category","label":"Internal Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/en/docs/guide/internal/architecture","docId":"guide/internal/architecture","unlisted":false},{"type":"link","label":"Althread Virtual Machine","href":"/en/docs/guide/internal/vm","docId":"guide/internal/vm","unlisted":false}]}],"apiSidebar":[{"type":"link","label":"Test","href":"/en/docs/api/intro","docId":"api/intro","unlisted":false}],"exampleSidebar":[{"type":"link","label":"Examples","href":"/en/docs/example/","docId":"example/example","unlisted":false}]},"docs":{"api/intro":{"id":"api/intro","title":"Test","description":"","sidebar":"apiSidebar"},"example/example":{"id":"example/example","title":"Examples","description":"","sidebar":"exampleSidebar"},"guide/channels/create":{"id":"guide/channels/create","title":"Creating a Channel","description":"A communication channel can be created between two processes to allow them to communicate. Channel creation is done using the channel keyword. Here\'s an example of channel declaration:","sidebar":"guideSidebar"},"guide/channels/multiple-wait":{"id":"guide/channels/multiple-wait","title":"Multiple Message Waiting","description":"It is possible to wait for messages from multiple channels simultaneously. To do this, simply use the wait instruction followed by the waiting type first or seq and use a block with different conditions (similar to a match in Rust).","sidebar":"guideSidebar"},"guide/debugging":{"id":"guide/debugging","title":"Debugging","description":"This page ins under construction. Please come back later.","sidebar":"guideSidebar"},"guide/getting-started/hello-world":{"id":"guide/getting-started/hello-world","title":"hello-world","description":"---","sidebar":"guideSidebar"},"guide/getting-started/installation":{"id":"guide/getting-started/installation","title":"Installation","description":"Browser Usage","sidebar":"guideSidebar"},"guide/getting-started/syntaxe":{"id":"guide/getting-started/syntaxe","title":"Althread Syntax","description":"Althread\'s syntax is designed to be as intuitive as possible. It is inspired by C and Rust, which allows for quick adoption and focuses on concepts rather than syntax.","sidebar":"guideSidebar"},"guide/internal/architecture":{"id":"guide/internal/architecture","title":"Architecture","description":"Althread is a statically typed language that is compiled into instructions for the Althread virtual machine. This virtual machine is a program that executes Althread program instructions. These instructions are low-level operations that manipulate program data, but are not as low-level as instructions on a physical machine. The Althread virtual machine is designed to be easy to implement and understand, while remaining sufficiently performant to execute programs of a reasonable size.","sidebar":"guideSidebar"},"guide/internal/vm":{"id":"guide/internal/vm","title":"Althread Virtual Machine","description":"Virtual Machine State","sidebar":"guideSidebar"},"guide/intro":{"id":"guide/intro","title":"Introduction","description":"What is Althread?","sidebar":"guideSidebar"},"guide/program/arguments":{"id":"guide/program/arguments","title":"Arguments","description":"A program can receive arguments. These arguments are values passed to the program during its execution. Arguments are used to customize the processes running a program.","sidebar":"guideSidebar"},"guide/program/global":{"id":"guide/program/global","title":"Shared Variables","description":"Until now, variables declared in a program are local to that program. This means a program cannot access variables from other programs:","sidebar":"guideSidebar"},"guide/program/simple-process":{"id":"guide/program/simple-process","title":"Using Programs","description":"We will now see how to create and execute programs in Althread. A program is simply an algorithm that, when executed, becomes a process, an independent execution unit that can run in parallel with other processes. Processes can communicate with each other using shared variables or channels.","sidebar":"guideSidebar"},"guide/test":{"id":"guide/test","title":"Creating Tests","description":"Now, let\u2019s look at how to create tests for your processes. These tests are used to monitor the behavior of your processes and ensure they function correctly.","sidebar":"guideSidebar"}}}}')}}]);