"use strict";(self.webpackChunkalthread=self.webpackChunkalthread||[]).push([[604],{6534:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var n=r(6070),s=r(5710);const t={sidebar_position:3},i="Variables partag\xe9es",o={id:"guide/program/global",title:"Variables partag\xe9es",description:"Jusqu'\xe0 pr\xe9sent, les variables d\xe9clar\xe9es dans un programme sont locales \xe0 ce programme. Cela signifie qu'un programme ne peut pas acc\xe9der aux variables des autres programme :",source:"@site/docs/guide/program/global.md",sourceDirName:"guide/program",slug:"/guide/program/global",permalink:"/docs/guide/program/global",draft:!1,unlisted:!1,editUrl:"https://github.com/althread/althread/tree/main/doc/docs/guide/program/global.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"guideSidebar",previous:{title:"Arguments",permalink:"/docs/guide/program/arguments"},next:{title:"Cr\xe9ation d'un canal",permalink:"/docs/guide/channels/create"}},l={},c=[{value:"D\xe9claration de variables partag\xe9es",id:"d\xe9claration-de-variables-partag\xe9es",level:2},{value:"Ex\xe9cution de processus avec des variables partag\xe9es",id:"ex\xe9cution-de-processus-avec-des-variables-partag\xe9es",level:2}];function d(e){const a={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsx)(a.h1,{id:"variables-partag\xe9es",children:"Variables partag\xe9es"})}),"\n",(0,n.jsx)(a.p,{children:"Jusqu'\xe0 pr\xe9sent, les variables d\xe9clar\xe9es dans un programme sont locales \xe0 ce programme. Cela signifie qu'un programme ne peut pas acc\xe9der aux variables des autres programme :"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-althread",children:"program Prog1() {\n    // This will error\n    print(x); // x n'existe pas dans ce processus\n}\n\nmain {\n    let x = 0;\n    run Prog1();\n}\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"danger",children:(0,n.jsxs)(a.p,{children:["Le code ci-dessus renverra une erreur : le programme ",(0,n.jsx)(a.code,{children:"Prog1"})," ne peut pas acc\xe9der \xe0 la variable ",(0,n.jsx)(a.code,{children:"x"})," d\xe9clar\xe9e dans le programme principal."]})}),"\n",(0,n.jsx)(a.h2,{id:"d\xe9claration-de-variables-partag\xe9es",children:"D\xe9claration de variables partag\xe9es"}),"\n",(0,n.jsx)(a.p,{children:"Pour permettre \xe0 plusieurs processus d'acc\xe9der \xe0 une m\xeame variable, vous devez la d\xe9clarer comme une variable partag\xe9e. Une variable partag\xe9e est une variable qui peut \xeatre lue et modifi\xe9e par plusieurs processus. Voici comment d\xe9clarer une variable partag\xe9e :"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-althread",children:"shared {\n    let X: int;\n    let Y = false;\n    const A = 42;\n}\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"warning",children:(0,n.jsx)(a.p,{children:"Le nom d'une variable partag\xe9e commence obligatoirement par une majuscule."})}),"\n",(0,n.jsx)(a.admonition,{type:"tip",children:(0,n.jsxs)(a.p,{children:["Les d\xe9claration du bloc ",(0,n.jsx)(a.code,{children:"shared"})," fonctionnent comme les d\xe9clarations classiques : elles peuvent \xeatre constantes ou mutables, avoir n'importe quel type et l'on peut leur assigner une valeur.\nIl n'est possible de faire que des d\xe9clarations dans le bloc ",(0,n.jsx)(a.code,{children:"shared"}),"."]})}),"\n",(0,n.jsx)(a.h2,{id:"ex\xe9cution-de-processus-avec-des-variables-partag\xe9es",children:"Ex\xe9cution de processus avec des variables partag\xe9es"}),"\n",(0,n.jsxs)(a.p,{children:["Lors de l'ex\xe9cution, le bloc ",(0,n.jsx)(a.code,{children:"shared"})," est ex\xe9cut\xe9 d'une traite avant les processus. Les variables partag\xe9es sont ainsi accessibles et modifiables par tous les processus."]}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{className:"language-althread",children:"shared {\n    let X : int;\n}\n\nprogram Prog1() {\n    X++;\n    wait X == 2;\n}\n\nmain {\n    run Prog1();\n    run Prog1();\n}\n"})}),"\n",(0,n.jsx)(a.admonition,{type:"note",children:(0,n.jsxs)(a.p,{children:["Dans cet exemple, les deux processus ",(0,n.jsx)(a.code,{children:"Prog1"})," incr\xe9mentent la variable ",(0,n.jsx)(a.code,{children:"X"})," de 1. Le premier processus attend ensuite que ",(0,n.jsx)(a.code,{children:"X"})," soit \xe9gal \xe0 2 avant de continuer."]})})]})}function u(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},5710:(e,a,r)=>{r.d(a,{R:()=>i,x:()=>o});var n=r(758);const s={},t=n.createContext(s);function i(e){const a=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(t.Provider,{value:a},e.children)}}}]);